❲import❳❲os❳⎩1⎭❲import❳❲json❳⎩2⎭❲import❳❲sys❳⎩3⎭⎩4⎭⎩5⎭❲defobj❳❲Component_Registry❳(){⎩6⎭•❲templates❳⇐{}⎩7⎭}⎩8⎭⎩9⎭❲defobj❳❲Template❳(❲name❳,❲template_data❳,❲instantiator❳){⎩10⎭•❲name❳⇐❲name❳⎩11⎭•❲template_data❳⇐❲template_data❳⎩12⎭•❲instantiator❳⇐❲instantiator❳⎩13⎭}⎩14⎭⎩15⎭❲defn❳❲read_and_convert_json_file❳(❲filename❳){⎩16⎭#❲read_and_convert_json_file❳(❲filename❳)⎩17⎭}⎩18⎭⎩19⎭❲defn❳❲json2internal❳(❲container_xml❳){⎩20⎭❲fname❳≡❲os❳.❲path❳.❲basename❳(❲container_xml❳)⎩21⎭❲routings❳≡❲read_and_convert_json_file❳(❲fname❳)⎩22⎭❲return❳❲routings❳⎩23⎭}⎩24⎭⎩25⎭❲defn❳❲delete_decls❳(❲d❳){⎩26⎭❲pass❳⎩27⎭}⎩28⎭⎩29⎭❲defn❳❲make_component_registry❳(){⎩30⎭❲return❳❲Component_Registry❳()⎩31⎭}⎩32⎭⎩33⎭❲defn❳❲register_component❳(❲reg❳,❲template❳,❲ok_to_overwrite❳∷⊥){⎩34⎭❲name❳≡❲mangle_name❳(❲template❳.❲name❳)⎩35⎭❲if❳❲name❳❲in❳❲reg❳.❲templates❳❲and❳❲not❳❲ok_to_overwrite❳{⎩36⎭❲load_error❳(❲strcons❳(“Component%20”,❲strcons❳(❲template❳.❲name❳,“%20already%20declared”)))}⎩37⎭❲reg❳.❲templates❳[❲name❳]≡❲template❳⎩38⎭❲return❳❲reg❳⎩39⎭}⎩40⎭⎩41⎭❲defn❳❲register_multiple_components❳(❲reg❳,❲templates❳){⎩42⎭❲for❳❲template❳❲in❳❲templates❳{⎩43⎭❲register_component❳(❲reg❳,❲template❳)}⎩44⎭}⎩45⎭⎩46⎭❲defn❳❲get_component_instance❳(❲reg❳,❲full_name❳,❲owner❳){⎩47⎭❲template_name❳≡❲mangle_name❳(❲full_name❳)⎩48⎭❲if❳❲template_name❳❲in❳❲reg❳.❲templates❳{⎩49⎭❲template❳≡❲reg❳.❲templates❳[❲template_name❳]⎩50⎭❲if❳(❲template❳=❲%CF%95❳){⎩51⎭❲load_error❳(❲strcons❳(“Registry%20Error%3A%20Can%27t%20find%20component%20”,❲strcons❳(❲template_name❳,“%20(does%20it%20need%20to%20be%20declared%20in%20components_to_include_in_project%3F”)))⎩52⎭❲return❳❲%CF%95❳}⎩53⎭❲else❳{⎩54⎭❲owner_name❳≡“”⎩55⎭❲instance_name❳≡❲template_name❳⎩56⎭❲if❳❲%CF%95❳!=❲owner❳{⎩57⎭❲owner_name❳≡❲owner❳.❲name❳⎩58⎭❲instance_name❳≡❲strcons❳(❲owner_name❳,❲strcons❳(“.”,❲template_name❳))}⎩59⎭❲else❳{⎩60⎭❲instance_name❳≡❲template_name❳}⎩61⎭❲instance❳≡❲template❳.❲instantiator❳(❲reg❳,❲owner❳,❲instance_name❳,❲template❳.❲template_data❳)⎩62⎭❲instance❳.❲depth❳⇐❲calculate_depth❳(❲instance❳)⎩63⎭❲return❳❲instance❳}}⎩64⎭❲else❳{⎩65⎭❲load_error❳(❲strcons❳(“Registry%20Error%3A%20Can%27t%20find%20component%20”,❲strcons❳(❲template_name❳,“%20(does%20it%20need%20to%20be%20declared%20in%20components_to_include_in_project%3F”)))⎩66⎭❲return❳❲%CF%95❳}⎩67⎭}⎩68⎭❲defn❳❲calculate_depth❳(❲eh❳){⎩69⎭❲if❳❲eh❳.❲owner❳=❲%CF%95❳{⎩70⎭❲return❳0}⎩71⎭❲else❳{⎩72⎭❲return❳1+❲calculate_depth❳(❲eh❳.❲owner❳)}⎩73⎭}⎩74⎭⎩75⎭❲defn❳❲dump_registry❳(❲reg❳){⎩76⎭❲print❳()⎩77⎭❲print❳(“***%20PALETTE%20***”)⎩78⎭❲for❳❲c❳❲in❳❲reg❳.❲templates❳{⎩79⎭❲print❳(❲c❳.❲name❳)}⎩80⎭❲print❳(“***************”)⎩81⎭❲print❳()⎩82⎭}⎩83⎭⎩84⎭❲defn❳❲print_stats❳(❲reg❳){⎩85⎭❲print❳(❲strcons❳(“registry%20statistics%3A%20”,❲reg❳.❲stats❳))⎩86⎭}⎩87⎭⎩88⎭❲defn❳❲mangle_name❳(❲s❳){⎩89⎭⌈%20trim%20name%20to%20remove%20code%20from%20Container%20component%20names%20_%20deferred%20until%20later%20(or%20never)⌉⎩90⎭❲return❳❲s❳⎩91⎭}⎩92⎭⎩93⎭❲import❳❲subprocess❳⎩94⎭❲defn❳❲generate_shell_components❳(❲reg❳,❲container_list❳){⎩95⎭⌈%20%5B⌉⎩96⎭⌈%20%20%20%20%20%7B%27file%27%3A%20%27simple0d.drawio%27%2C%20%27name%27%3A%20%27main%27%2C%20%27children%27%3A%20%5B%7B%27name%27%3A%20%27Echo%27%2C%20%27id%27%3A%205%7D%5D%2C%20%27connections%27%3A%20%5B...%5D%7D%2C⌉⎩97⎭⌈%20%20%20%20%20%7B%27file%27%3A%20%27simple0d.drawio%27%2C%20%27name%27%3A%20%27...%27%2C%20%27children%27%3A%20%5B%5D%2C%20%27connections%27%3A%20%5B%5D%7D⌉⎩98⎭⌈%20%5D⌉⎩99⎭❲if❳❲%CF%95❳!=❲container_list❳{⎩100⎭❲for❳❲diagram❳❲in❳❲container_list❳{⎩101⎭⌈%20loop%20through%20every%20component%20in%20the%20diagram%20and%20look%20for%20names%20that%20start%20with%20%E2%80%9C%24%E2%80%9C⌉⎩102⎭⌈%20%7B%27file%27%3A%20%27simple0d.drawio%27%2C%20%27name%27%3A%20%27main%27%2C%20%27children%27%3A%20%5B%7B%27name%27%3A%20%27Echo%27%2C%20%27id%27%3A%205%7D%5D%2C%20%27connections%27%3A%20%5B...%5D%7D%2C⌉⎩103⎭❲for❳❲child_descriptor❳❲in❳❲diagram❳@❲children❳{⎩104⎭❲if❳❲first_char_is❳(❲child_descriptor❳@❲name❳,“%24”){⎩105⎭❲name❳≡❲child_descriptor❳@❲name❳⎩106⎭❲cmd❳≡❲stringcdr❳(❲name❳).❲strip❳()⎩107⎭❲generated_leaf❳≡❲Template❳(❲name❳∷❲name❳,❲instantiator❳∷❲shell_out_instantiate❳,❲template_data❳∷❲cmd❳)⎩108⎭❲register_component❳(❲reg❳,❲generated_leaf❳)}⎩109⎭❲elif❳❲first_char_is❳(❲child_descriptor❳@❲name❳,“%27”){⎩110⎭❲name❳≡❲child_descriptor❳@❲name❳⎩111⎭❲s❳≡❲stringcdr❳(❲name❳)⎩112⎭❲generated_leaf❳≡❲Template❳(❲name❳∷❲name❳,❲instantiator❳∷❲string_constant_instantiate❳,❲template_data❳∷❲s❳)⎩113⎭❲register_component❳(❲reg❳,❲generated_leaf❳,❲ok_to_overwrite❳∷⊤)}}}}⎩114⎭}⎩115⎭⎩116⎭❲defn❳❲first_char❳(❲s❳){⎩117⎭❲return❳❲car❳(❲s❳)⎩118⎭}⎩119⎭⎩120⎭❲defn❳❲first_char_is❳(❲s❳,❲c❳){⎩121⎭❲return❳❲c❳=❲first_char❳(❲s❳)⎩122⎭}⎩123⎭⎩124⎭⌈%20this%20needs%20to%20be%20rewritten%20to%20use%20the%20low_level%20%E2%80%9Cshell_out%E2%80%9C%20component%2C%20this%20can%20be%20done%20solely%20as%20a%20diagram%20without%20using%20python%20code%20here⌉⎩125⎭⌈%20I%27ll%20keep%20it%20for%20now%2C%20during%20bootstrapping%2C%20since%20it%20mimics%20what%20is%20done%20in%20the%20Odin%20prototype%20_%20both%20need%20to%20be%20revamped⌉⎩126⎭❲defn❳❲run_command❳(❲eh❳,❲cmd❳,❲s❳){⎩127⎭❲ret❳≡❲subprocess❳.❲run❳(❲cmd❳,❲capture_output❳∷⊤,❲input❳∷❲s❳,❲encoding❳∷“UTF_8”)⎩128⎭❲if❳❲not❳(❲ret❳.❲returncode❳=0){⎩129⎭❲if❳❲ret❳.❲stderr❳!=❲%CF%95❳{⎩130⎭❲return❳[“”,❲ret❳.❲stderr❳]}⎩131⎭❲else❳{⎩132⎭❲return❳[“”,❲strcons❳(“error%20in%20shell_out%20”,❲ret❳.❲returncode❳)]}}⎩133⎭❲else❳{⎩134⎭❲return❳[❲ret❳.❲stdout❳,❲%CF%95❳]}⎩135⎭}⎩136⎭⎩137⎭⌈%20Data%20for%20an%20asyncronous%20component%20_%20effectively%2C%20a%20function%20with%20input⌉⎩138⎭⌈%20and%20output%20queues%20of%20messages.⌉⎩139⎭⌈⌉⎩140⎭⌈%20Components%20can%20either%20be%20a%20user_supplied%20function%20(%E2%80%9Clea%E2%80%9C)%2C%20or%20a%20%E2%80%9Ccontainer%E2%80%9C⌉⎩141⎭⌈%20that%20routes%20messages%20to%20child%20components%20according%20to%20a%20list%20of%20connections⌉⎩142⎭⌈%20that%20serve%20as%20a%20message%20routing%20table.⌉⎩143⎭⌈⌉⎩144⎭⌈%20Child%20components%20themselves%20can%20be%20leaves%20or%20other%20containers.⌉⎩145⎭⌈⌉⎩146⎭⌈%20%60handler%60%20invokes%20the%20code%20that%20is%20attached%20to%20this%20component.⌉⎩147⎭⌈⌉⎩148⎭⌈%20%60instance_data%60%20is%20a%20pointer%20to%20instance%20data%20that%20the%20%60leaf_handler%60⌉⎩149⎭⌈%20function%20may%20want%20whenever%20it%20is%20invoked%20again.⌉⎩150⎭⌈⌉⎩151⎭⎩152⎭❲import❳❲queue❳⎩153⎭❲import❳❲sys❳⎩154⎭⎩155⎭⎩156⎭⌈%20Eh_States%20%3A%3A%20enum%20%7B%20idle%2C%20active%20%7D⌉⎩157⎭❲defobj❳❲Eh❳(){⎩158⎭•❲name❳⇐“”⎩159⎭•❲inq❳⇐❲queue❳.❲Queue❳()⎩160⎭•❲outq❳⇐❲queue❳.❲Queue❳()⎩161⎭•❲owner❳⇐❲%CF%95❳⎩162⎭•❲saved_messages❳⇐❲queue❳.❲LifoQueue❳()⌈%20stack%20of%20saved%20message(s)⌉⎩163⎭•❲inject❳⇐❲injector_NIY❳⎩164⎭•❲children❳⇐[]⎩165⎭•❲visit_ordering❳⇐❲queue❳.❲Queue❳()⎩166⎭•❲connections❳⇐[]⎩167⎭•❲routings❳⇐❲queue❳.❲Queue❳()⎩168⎭•❲handler❳⇐❲%CF%95❳⎩169⎭•❲instance_data❳⇐❲%CF%95❳⎩170⎭•❲state❳⇐“idle”⎩171⎭⌈%20bootstrap%20debugging⌉⎩172⎭•❲kind❳⇐❲%CF%95❳⌈%20enum%20%7B%20container%2C%20leaf%2C%20%7D⌉⎩173⎭•❲trace❳⇐⊥⌈%20set%20%27%E2%8A%A4%27%20if%20logging%20is%20enabled%20and%20if%20this%20component%20should%20be%20traced%2C%20(%E2%8A%A5%20means%20silence%2C%20no%20tracing%20for%20this%20component)⌉⎩174⎭•❲depth❳⇐0⌈%20hierarchical%20depth%20of%20component%2C%200%3Dtop%2C%201%3D1st%20child%20of%20top%2C%202%3D1st%20child%20of%201st%20child%20of%20top%2C%20etc.⌉⎩175⎭}⎩176⎭⎩177⎭⌈%20Creates%20a%20component%20that%20acts%20as%20a%20container.%20It%20is%20the%20same%20as%20a%20%60Eh%60%20instance⌉⎩178⎭⌈%20whose%20handler%20function%20is%20%60container_handler%60.⌉⎩179⎭❲defn❳❲make_container❳(❲name❳,❲owner❳){⎩180⎭❲eh❳≡❲Eh❳()⎩181⎭❲eh❳.❲name❳⇐❲name❳⎩182⎭❲eh❳.❲owner❳⇐❲owner❳⎩183⎭❲eh❳.❲handler❳⇐❲container_handler❳⎩184⎭❲eh❳.❲inject❳⇐❲container_injector❳⎩185⎭❲eh❳.❲state❳⇐“idle”⎩186⎭❲eh❳.❲kind❳⇐“container”⎩187⎭❲return❳❲eh❳⎩188⎭}⎩189⎭⎩190⎭⌈%20Creates%20a%20new%20leaf%20component%20out%20of%20a%20handler%20function%2C%20and%20a%20data%20parameter⌉⎩191⎭⌈%20that%20will%20be%20passed%20back%20to%20your%20handler%20when%20called.⌉⎩192⎭⎩193⎭❲defn❳❲make_leaf❳(❲name❳,❲owner❳,❲instance_data❳,❲handler❳){⎩194⎭❲eh❳≡❲Eh❳()⎩195⎭❲eh❳.❲name❳⇐❲strcons❳(❲owner❳.❲name❳,❲strcons❳(“.”,❲name❳))⎩196⎭❲eh❳.❲owner❳⇐❲owner❳⎩197⎭❲eh❳.❲handler❳⇐❲handler❳⎩198⎭❲eh❳.❲instance_data❳⇐❲instance_data❳⎩199⎭❲eh❳.❲state❳⇐“idle”⎩200⎭❲eh❳.❲kind❳⇐“leaf”⎩201⎭❲return❳❲eh❳⎩202⎭}⎩203⎭⎩204⎭⌈%20Sends%20a%20message%20on%20the%20given%20%60port%60%20with%20%60data%60%2C%20placing%20it%20on%20the%20output⌉⎩205⎭⌈%20of%20the%20given%20component.⌉⎩206⎭⎩207⎭❲defn❳❲send❳(❲eh❳,❲port❳,❲datum❳,❲causingMessage❳){⎩208⎭❲msg❳≡❲make_message❳(❲port❳,❲datum❳)⎩209⎭❲log_send❳(❲sender❳∷❲eh❳,❲sender_port❳∷❲port❳,❲msg❳∷❲msg❳,❲cause_msg❳∷❲causingMessage❳)⎩210⎭❲put_output❳(❲eh❳,❲msg❳)⎩211⎭}⎩212⎭⎩213⎭❲defn❳❲send_string❳(❲eh❳,❲port❳,❲s❳,❲causingMessage❳){⎩214⎭❲datum❳≡❲new_datum_string❳(❲s❳)⎩215⎭❲msg❳≡❲make_message❳(❲port❳∷❲port❳,❲datum❳∷❲datum❳)⎩216⎭❲log_send_string❳(❲sender❳∷❲eh❳,❲sender_port❳∷❲port❳,❲msg❳∷❲msg❳,❲cause_msg❳∷❲causingMessage❳)⎩217⎭❲put_output❳(❲eh❳,❲msg❳)⎩218⎭}⎩219⎭⎩220⎭❲defn❳❲forward❳(❲eh❳,❲port❳,❲msg❳){⎩221⎭❲fwdmsg❳≡❲make_message❳(❲port❳,❲msg❳.❲datum❳)⎩222⎭❲log_forward❳(❲sender❳∷❲eh❳,❲sender_port❳∷❲port❳,❲msg❳∷❲msg❳,❲cause_msg❳∷❲msg❳)⎩223⎭❲put_output❳(❲eh❳,❲msg❳)⎩224⎭}⎩225⎭⎩226⎭❲defn❳❲inject❳(❲eh❳,❲msg❳){⎩227⎭❲eh❳.❲inject❳(❲eh❳,❲msg❳)⎩228⎭}⎩229⎭⎩230⎭⌈%20Returns%20a%20list%20of%20all%20output%20messages%20on%20a%20container.⌉⎩231⎭⌈%20For%20testing%20%2F%20debugging%20purposes.⌉⎩232⎭⎩233⎭❲defn❳❲output_list❳(❲eh❳){⎩234⎭❲return❳❲eh❳.❲outq❳⎩235⎭}⎩236⎭⎩237⎭⌈%20Utility%20for%20printing%20an%20array%20of%20messages.⌉⎩238⎭❲defn❳❲print_output_list❳(❲eh❳){⎩239⎭❲for❳❲m❳❲in❳❲list❳(❲eh❳.❲outq❳.❲queue❳){⎩240⎭❲print❳(❲format_message❳(❲m❳))}⎩241⎭}⎩242⎭⎩243⎭❲defn❳❲spaces❳(❲n❳){⎩244⎭❲deftemp❳❲s❳⇐“”⎩245⎭❲for❳❲i❳❲in❳❲range❳(❲n❳){⎩246⎭❲s❳⇐❲s❳+“%20”}⎩247⎭❲return❳❲s❳⎩248⎭}⎩249⎭⎩250⎭❲defn❳❲set_active❳(❲eh❳){⎩251⎭❲eh❳.❲state❳⇐“active”⎩252⎭}⎩253⎭⎩254⎭❲defn❳❲set_idle❳(❲eh❳){⎩255⎭❲eh❳.❲state❳⇐“idle”⎩256⎭}⎩257⎭⎩258⎭⌈%20Utility%20for%20printing%20a%20specific%20output%20message.⌉⎩259⎭⎩260⎭❲defn❳❲fetch_first_output❳(❲eh❳,❲port❳){⎩261⎭❲for❳❲msg❳❲in❳❲list❳(❲eh❳.❲outq❳.❲queue❳){⎩262⎭❲if❳(❲msg❳.❲port❳=❲port❳){⎩263⎭❲return❳❲msg❳.❲datum❳}}⎩264⎭❲return❳❲%CF%95❳⎩265⎭}⎩266⎭⎩267⎭❲defn❳❲print_specific_output❳(❲eh❳,❲port❳∷“”,❲stderr❳∷⊥){⎩268⎭❲deftemp❳❲datum❳⇐❲fetch_first_output❳(❲eh❳,❲port❳)⎩269⎭❲deftemp❳❲outf❳⇐❲%CF%95❳⎩270⎭❲if❳❲datum❳!=❲%CF%95❳{⎩271⎭❲if❳❲stderr❳{⌈%20I%20don%27t%20remember%20why%20I%20found%20it%20useful%20to%20print%20to%20stderr%20during%20bootstrapping%2C%20so%20I%27ve%20left%20it%20in...⌉⎩272⎭❲outf❳⇐❲sys❳.❲stderr❳}⎩273⎭❲else❳{⎩274⎭❲outf❳⇐❲sys❳.❲stdout❳}⎩275⎭❲print❳(❲datum❳.❲srepr❳(),❲file❳∷❲outf❳)}⎩276⎭}⎩277⎭⎩278⎭❲defn❳❲put_output❳(❲eh❳,❲msg❳){⎩279⎭❲eh❳.❲outq❳.❲put❳(❲msg❳)⎩280⎭}⎩281⎭⎩282⎭❲defn❳❲injector_NIY❳(❲eh❳,❲msg❳){⎩283⎭⌈%20print%20(f%27Injector%20not%20implemented%20for%20this%20component%20%E2%80%9C%7Beh.name%7D%E2%80%9C%20kind%20%E2%88%B7%20%7Beh.kind%7D%20port%20%E2%88%B7%20%E2%80%9C%7Bmsg.port%7D%E2%80%9C%27)⌉⎩284⎭❲print❳(❲strcons❳(“Injector%20not%20implemented%20for%20this%20component%20”,⎩285⎭❲strcons❳(❲eh❳.❲name❳,⎩286⎭❲strcons❳(“%20kind%20%E2%88%B7%20”,⎩287⎭❲strcons❳(❲eh❳.❲kind❳,⎩288⎭❲strcons❳(“%2C%20%20port%20%E2%88%B7%20”,❲msg❳.❲port❳))))))⎩289⎭❲exit❳()⎩290⎭}⎩291⎭⎩292⎭❲import❳❲sys❳⎩293⎭❲import❳❲re❳⎩294⎭❲import❳❲subprocess❳⎩295⎭❲import❳❲shlex❳⎩296⎭⎩297⎭❲defvar❳❲root_project❳⇐“”⎩298⎭❲defvar❳❲root_0D❳⇐“”⎩299⎭⎩300⎭❲defn❳❲set_environment❳(❲rproject❳,❲r0D❳){⎩301⎭❲global❳❲root_project❳⎩302⎭❲global❳❲root_0D❳⎩303⎭❲root_project❳⇐❲rproject❳⎩304⎭❲root_0D❳⇐❲r0D❳⎩305⎭}⎩306⎭⎩307⎭❲defn❳❲probe_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩308⎭❲name_with_id❳≡❲gensymbol❳(“%3F”)⎩309⎭❲return❳❲make_leaf❳(❲name❳∷❲name_with_id❳,❲owner❳∷❲owner❳,❲instance_data❳∷❲%CF%95❳,❲handler❳∷❲probe_handler❳)⎩310⎭}⎩311⎭❲defn❳❲probeA_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩312⎭❲name_with_id❳≡❲gensymbol❳(“%3FA”)⎩313⎭❲return❳❲make_leaf❳(❲name❳∷❲name_with_id❳,❲owner❳∷❲owner❳,❲instance_data❳∷❲%CF%95❳,❲handler❳∷❲probe_handler❳)⎩314⎭}⎩315⎭⎩316⎭❲defn❳❲probeB_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩317⎭❲name_with_id❳≡❲gensymbol❳(“%3FB”)⎩318⎭❲return❳❲make_leaf❳(❲name❳∷❲name_with_id❳,❲owner❳∷❲owner❳,❲instance_data❳∷❲%CF%95❳,❲handler❳∷❲probe_handler❳)⎩319⎭}⎩320⎭⎩321⎭❲defn❳❲probeC_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩322⎭❲name_with_id❳≡❲gensymbol❳(“%3FC”)⎩323⎭❲return❳❲make_leaf❳(❲name❳∷❲name_with_id❳,❲owner❳∷❲owner❳,❲instance_data❳∷❲%CF%95❳,❲handler❳∷❲probe_handler❳)⎩324⎭}⎩325⎭⎩326⎭❲defn❳❲probe_handler❳(❲eh❳,❲msg❳){⎩327⎭❲s❳≡❲msg❳.❲datum❳.❲srepr❳()⎩328⎭❲print❳(❲strcons❳(“...%20probe%20”,❲strcons❳(❲eh❳.❲name❳,❲strcons❳(“%3A%20”,❲s❳))),❲file❳∷❲sys❳.❲stderr❳)⎩329⎭}⎩330⎭⎩331⎭❲defn❳❲trash_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩332⎭❲name_with_id❳≡❲gensymbol❳(“trash”)⎩333⎭❲return❳❲make_leaf❳(❲name❳∷❲name_with_id❳,❲owner❳∷❲owner❳,❲instance_data❳∷❲%CF%95❳,❲handler❳∷❲trash_handler❳)⎩334⎭}⎩335⎭⎩336⎭❲defn❳❲trash_handler❳(❲eh❳,❲msg❳){⎩337⎭⌈%20to%20appease%20dumped_on_floor%20checker⌉⎩338⎭❲pass❳⎩339⎭}⎩340⎭❲defobj❳❲TwoMessages❳(❲first❳,❲second❳){⎩341⎭•❲first❳⇐❲first❳⎩342⎭•❲second❳⇐❲second❳⎩343⎭}⎩344⎭⎩345⎭⌈%20Deracer_States%20%3A%3A%20enum%20%7B%20idle%2C%20waitingForFirst%2C%20waitingForSecond%20%7D⌉⎩346⎭❲defobj❳❲Deracer_Instance_Data❳(❲state❳,❲buffer❳){⎩347⎭•❲state❳⇐❲state❳⎩348⎭•❲buffer❳⇐❲buffer❳⎩349⎭}⎩350⎭⎩351⎭❲defn❳❲reclaim_Buffers_from_heap❳(❲inst❳){⎩352⎭❲pass❳⎩353⎭}⎩354⎭⎩355⎭❲defn❳❲deracer_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩356⎭❲name_with_id❳≡❲gensymbol❳(“deracer”)⎩357⎭❲inst❳≡❲Deracer_Instance_Data❳(“idle”,❲TwoMessages❳(❲%CF%95❳,❲%CF%95❳))⎩358⎭❲inst❳.❲state❳⇐“idle”⎩359⎭❲eh❳≡❲make_leaf❳(❲name❳∷❲name_with_id❳,❲owner❳∷❲owner❳,❲instance_data❳∷❲inst❳,❲handler❳∷❲deracer_handler❳)⎩360⎭❲return❳❲eh❳⎩361⎭}⎩362⎭⎩363⎭❲defn❳❲send_first_then_second❳(❲eh❳,❲inst❳){⎩364⎭❲forward❳(❲eh❳,“1”,❲inst❳.❲buffer❳.❲first❳)⎩365⎭❲forward❳(❲eh❳,“2”,❲inst❳.❲buffer❳.❲second❳)⎩366⎭❲reclaim_Buffers_from_heap❳(❲inst❳)⎩367⎭}⎩368⎭⎩369⎭❲defn❳❲deracer_handler❳(❲eh❳,❲msg❳){⎩370⎭❲inst❳⇐❲eh❳.❲instance_data❳⎩371⎭❲if❳❲inst❳.❲state❳=“idle”{⎩372⎭❲if❳“1”=❲msg❳.❲port❳{⎩373⎭❲inst❳.❲buffer❳.❲first❳⇐❲msg❳⎩374⎭❲inst❳.❲state❳⇐“waitingForSecond”}⎩375⎭❲elif❳“2”=❲msg❳.❲port❳{⎩376⎭❲inst❳.❲buffer❳.❲second❳⇐❲msg❳⎩377⎭❲inst❳.❲state❳⇐“waitingForFirst”}⎩378⎭❲else❳{⎩379⎭❲runtime_error❳(❲strcons❳(“bad%20msg.port%20(case%20A)%20for%20deracer%20”,❲msg❳.❲port❳))}}⎩380⎭❲elif❳❲inst❳.❲state❳=“waitingForFirst”{⎩381⎭❲if❳“1”=❲msg❳.❲port❳{⎩382⎭❲inst❳.❲buffer❳.❲first❳⇐❲msg❳⎩383⎭❲send_first_then_second❳(❲eh❳,❲inst❳)⎩384⎭❲inst❳.❲state❳⇐“idle”}⎩385⎭❲else❳{⎩386⎭❲runtime_error❳(❲strcons❳(“bad%20msg.port%20(case%20B)%20for%20deracer%20”,❲msg❳.❲port❳))}}⎩387⎭❲elif❳❲inst❳.❲state❳=“waitingForSecond”{⎩388⎭❲if❳“2”=❲msg❳.❲port❳{⎩389⎭❲inst❳.❲buffer❳.❲second❳⇐❲msg❳⎩390⎭❲send_first_then_second❳(❲eh❳,❲inst❳)⎩391⎭❲inst❳.❲state❳⇐“idle”}⎩392⎭❲else❳{⎩393⎭❲runtime_error❳(❲strcons❳(“bad%20msg.port%20(case%20C)%20for%20deracer%20”,❲msg❳.❲port❳))}}⎩394⎭❲else❳{⎩395⎭❲runtime_error❳(“bad%20state%20for%20deracer%20%7Beh.state%7D”)}⎩396⎭}⎩397⎭⎩398⎭❲defn❳❲low_level_read_text_file_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩399⎭❲name_with_id❳≡❲gensymbol❳(“Low%20Level%20Read%20Text%20File”)⎩400⎭❲return❳❲make_leaf❳(❲name_with_id❳,❲owner❳,❲%CF%95❳,❲low_level_read_text_file_handler❳)⎩401⎭}⎩402⎭⎩403⎭❲defn❳❲low_level_read_text_file_handler❳(❲eh❳,❲msg❳){⎩404⎭❲fname❳≡❲msg❳.❲datum❳.❲srepr❳()⎩405⎭#❲low_level_read_text_file_handler❳(❲eh❳,❲msg❳,❲fname❳,“”,“%E2%9C%97”)⎩406⎭}⎩407⎭⎩408⎭❲defn❳❲ensure_string_datum_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩409⎭❲name_with_id❳≡❲gensymbol❳(“Ensure%20String%20Datum”)⎩410⎭❲return❳❲make_leaf❳(❲name_with_id❳,❲owner❳,❲%CF%95❳,❲ensure_string_datum_handler❳)⎩411⎭}⎩412⎭⎩413⎭❲defn❳❲ensure_string_datum_handler❳(❲eh❳,❲msg❳){⎩414⎭❲if❳“string”=❲msg❳.❲datum❳.❲kind❳(){⎩415⎭❲forward❳(❲eh❳,“”,❲msg❳)}⎩416⎭❲else❳{⎩417⎭❲emsg❳≡❲strcons❳(“***%20ensure%3A%20type%20error%20(expected%20a%20string%20datum)%20but%20got%20”,❲msg❳.❲datum❳)⎩418⎭❲send_string❳(❲eh❳,“%E2%9C%97”,❲emsg❳,❲msg❳)}⎩419⎭}⎩420⎭⎩421⎭❲defobj❳❲Syncfilewrite_Data❳(){⎩422⎭•❲filename❳⇐“”⎩423⎭}⎩424⎭⎩425⎭⌈%20temp%20copy%20for%20bootstrap%2C%20sends%20%E2%80%9Cdone%E2%80%9C%20(error%20during%20bootstrap%20if%20not%20wired)⌉⎩426⎭❲defn❳❲syncfilewrite_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩427⎭❲name_with_id❳≡❲gensymbol❳(“syncfilewrite”)⎩428⎭❲inst❳≡❲Syncfilewrite_Data❳()⎩429⎭❲return❳❲make_leaf❳(❲name_with_id❳,❲owner❳,❲inst❳,❲syncfilewrite_handler❳)⎩430⎭}⎩431⎭⎩432⎭❲defn❳❲syncfilewrite_handler❳(❲eh❳,❲msg❳){⎩433⎭❲deftemp❳❲inst❳⇐❲eh❳.❲instance_data❳⎩434⎭❲if❳“filename”=❲msg❳.❲port❳{⎩435⎭❲inst❳.❲filename❳⇐❲msg❳.❲datum❳.❲srepr❳()}⎩436⎭❲elif❳“input”=❲msg❳.❲port❳{⎩437⎭❲contents❳≡❲msg❳.❲datum❳.❲srepr❳()⎩438⎭❲deftemp❳❲f❳⇐❲open❳(❲inst❳.❲filename❳,“w”)⎩439⎭❲if❳❲f❳!=❲%CF%95❳{⎩440⎭❲f❳.❲write❳(❲msg❳.❲datum❳.❲srepr❳())⎩441⎭❲f❳.❲close❳()⎩442⎭❲send❳(❲eh❳,“done”,❲new_datum_bang❳(),❲msg❳)}⎩443⎭❲else❳{⎩444⎭❲send_string❳(❲eh❳,“%E2%9C%97”,❲strcons❳(“open%20error%20on%20file%20”,❲inst❳.❲filename❳),❲msg❳)}}⎩445⎭}⎩446⎭⎩447⎭❲defobj❳❲StringConcat_Instance_Data❳(){⎩448⎭•❲buffer1❳⇐❲%CF%95❳⎩449⎭•❲buffer2❳⇐❲%CF%95❳⎩450⎭•❲count❳⇐0⎩451⎭}⎩452⎭⎩453⎭❲defn❳❲stringconcat_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩454⎭❲name_with_id❳≡❲gensymbol❳(“stringconcat”)⎩455⎭❲instp❳≡❲StringConcat_Instance_Data❳()⎩456⎭❲return❳❲make_leaf❳(❲name_with_id❳,❲owner❳,❲instp❳,❲stringconcat_handler❳)⎩457⎭}⎩458⎭⎩459⎭❲defn❳❲stringconcat_handler❳(❲eh❳,❲msg❳){⎩460⎭❲deftemp❳❲inst❳⇐❲eh❳.❲instance_data❳⎩461⎭❲if❳“1”=❲msg❳.❲port❳{⎩462⎭❲inst❳.❲buffer1❳⇐❲clone_string❳(❲msg❳.❲datum❳.❲srepr❳())⎩463⎭❲inst❳.❲count❳⇐❲inst❳.❲count❳+1⎩464⎭❲maybe_stringconcat❳(❲eh❳,❲inst❳,❲msg❳)}⎩465⎭❲elif❳“2”=❲msg❳.❲port❳{⎩466⎭❲inst❳.❲buffer2❳⇐❲clone_string❳(❲msg❳.❲datum❳.❲srepr❳())⎩467⎭❲inst❳.❲count❳⇐❲inst❳.❲count❳+1⎩468⎭❲maybe_stringconcat❳(❲eh❳,❲inst❳,❲msg❳)}⎩469⎭❲else❳{⎩470⎭❲runtime_error❳(❲strcons❳(“bad%20msg.port%20for%20stringconcat%3A%20”,❲msg❳.❲port❳))⎩471⎭}⎩472⎭}⎩473⎭⎩474⎭❲defn❳❲maybe_stringconcat❳(❲eh❳,❲inst❳,❲msg❳){⎩475⎭❲if❳(0=❲len❳(❲inst❳.❲buffer1❳))❲and❳(0=❲len❳(❲inst❳.❲buffer2❳)){⎩476⎭❲runtime_error❳(“something%20is%20wrong%20in%20stringconcat%2C%20both%20strings%20are%200%20length”)}⎩477⎭❲if❳❲inst❳.❲count❳>=2{⎩478⎭❲deftemp❳❲concatenated_string❳⇐“”⎩479⎭❲if❳0=❲len❳(❲inst❳.❲buffer1❳){⎩480⎭❲concatenated_string❳⇐❲inst❳.❲buffer2❳}⎩481⎭❲elif❳0=❲len❳(❲inst❳.❲buffer2❳){⎩482⎭❲concatenated_string❳⇐❲inst❳.❲buffer1❳}⎩483⎭❲else❳{⎩484⎭❲concatenated_string❳⇐❲inst❳.❲buffer1❳+❲inst❳.❲buffer2❳}⎩485⎭❲send_string❳(❲eh❳,“”,❲concatenated_string❳,❲msg❳)⎩486⎭❲inst❳.❲buffer1❳⇐❲%CF%95❳⎩487⎭❲inst❳.❲buffer2❳⇐❲%CF%95❳⎩488⎭❲inst❳.❲count❳⇐0}⎩489⎭}⎩490⎭⎩491⎭⌈⌉⎩492⎭⎩493⎭⌈%20this%20needs%20to%20be%20rewritten%20to%20use%20the%20low_level%20%E2%80%9Cshell_out%E2%80%9C%20component%2C%20this%20can%20be%20done%20solely%20as%20a%20diagram%20without%20using%20python%20code%20here⌉⎩494⎭❲defn❳❲shell_out_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩495⎭❲name_with_id❳≡❲gensymbol❳(“shell_out”)⎩496⎭❲cmd❳≡❲shlex❳.❲split❳(❲template_data❳)⎩497⎭❲return❳❲make_leaf❳(❲name_with_id❳,❲owner❳,❲cmd❳,❲shell_out_handler❳)⎩498⎭}⎩499⎭⎩500⎭❲defn❳❲shell_out_handler❳(❲eh❳,❲msg❳){⎩501⎭❲cmd❳≡❲eh❳.❲instance_data❳⎩502⎭❲s❳≡❲msg❳.❲datum❳.❲srepr❳()⎩503⎭[❲stdout❳,❲stderr❳]⇐❲run_command❳(❲eh❳,❲cmd❳,❲s❳)⎩504⎭❲if❳❲stderr❳!=❲%CF%95❳{⎩505⎭❲send_string❳(❲eh❳,“%E2%9C%97”,❲stderr❳,❲msg❳)}⎩506⎭❲else❳{⎩507⎭❲send_string❳(❲eh❳,“”,❲stdout❳,❲msg❳)}⎩508⎭}⎩509⎭⎩510⎭❲defn❳❲string_constant_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩511⎭❲global❳❲root_project❳⎩512⎭❲global❳❲root_0D❳⎩513⎭❲name_with_id❳≡❲gensymbol❳(“strconst”)⎩514⎭❲deftemp❳❲s❳⇐❲template_data❳⎩515⎭❲if❳❲root_project❳!=“”{⎩516⎭❲s❳⇐❲re❳.❲sub❳(“_00_”,❲root_project❳,❲s❳)}⎩517⎭❲if❳❲root_0D❳!=“”{⎩518⎭❲s❳⇐❲re❳.❲sub❳(“_0D_”,❲root_0D❳,❲s❳)}⎩519⎭❲return❳❲make_leaf❳(❲name_with_id❳,❲owner❳,❲s❳,❲string_constant_handler❳)⎩520⎭}⎩521⎭⎩522⎭❲defn❳❲string_constant_handler❳(❲eh❳,❲msg❳){⎩523⎭❲s❳≡❲eh❳.❲instance_data❳⎩524⎭❲send_string❳(❲eh❳,“”,❲s❳,❲msg❳)⎩525⎭}⎩526⎭⎩527⎭❲defn❳❲string_make_persistent❳(❲s❳){⎩528⎭⌈%20this%20is%20here%20for%20non_GC%20languages%20like%20Odin%2C%20it%20is%20a%20no_op%20for%20GC%20languages%20like%20Python⌉⎩529⎭❲return❳❲s❳⎩530⎭}⎩531⎭⎩532⎭❲defn❳❲string_clone❳(❲s❳){⎩533⎭❲return❳❲s❳⎩534⎭}⎩535⎭⎩536⎭❲import❳❲sys❳⎩537⎭⎩538⎭⌈%20usage%3A%20app%20%24%7B_00_%7D%20%24%7B_0D_%7D%20arg%20main%20diagram_filename1%20diagram_filename2%20...⌉⎩539⎭⌈%20where%20%24%7B_00_%7D%20is%20the%20root%20directory%20for%20the%20project⌉⎩540⎭⌈%20where%20%24%7B_0D_%7D%20is%20the%20root%20directory%20for%200D%20(e.g.%200D%2Fodin%20or%200D%2Fpython)⌉⎩541⎭⎩542⎭⎩543⎭⎩544⎭❲defn❳❲initialize_component_palette❳(❲root_project❳,❲root_0D❳,❲diagram_source_files❳){⎩545⎭❲reg❳≡❲make_component_registry❳()⎩546⎭❲for❳❲diagram_source❳❲in❳❲diagram_source_files❳{⎩547⎭❲all_containers_within_single_file❳≡❲json2internal❳(❲diagram_source❳)⎩548⎭❲generate_shell_components❳(❲reg❳,❲all_containers_within_single_file❳)⎩549⎭❲for❳❲container❳❲in❳❲all_containers_within_single_file❳{⎩550⎭❲register_component❳(❲reg❳,❲Template❳(❲name❳∷❲container❳@❲name❳,❲template_data❳∷❲container❳,❲instantiator❳∷❲container_instantiator❳))}}⎩551⎭❲initialize_stock_components❳(❲reg❳)⎩552⎭❲return❳❲reg❳⎩553⎭}⎩554⎭⎩555⎭❲defn❳❲print_error_maybe❳(❲main_container❳){⎩556⎭❲error_port❳≡“%E2%9C%97”⎩557⎭❲err❳≡❲fetch_first_output❳(❲main_container❳,❲error_port❳)⎩558⎭❲if❳(❲err❳!=❲%CF%95❳)❲and❳(0<❲len❳(❲trimws❳(❲err❳.❲srepr❳()))){⎩559⎭❲print❳(“___%20!!!%20ERRORS%20!!!%20___”)⎩560⎭❲print_specific_output❳(❲main_container❳,❲error_port❳,⊥)}⎩561⎭}⎩562⎭⎩563⎭⌈%20debugging%20helpers⌉⎩564⎭⎩565⎭❲defn❳❲dump_outputs❳(❲main_container❳){⎩566⎭❲print❳()⎩567⎭❲print❳(“___%20Outputs%20___”)⎩568⎭❲print_output_list❳(❲main_container❳)⎩569⎭}⎩570⎭⎩571⎭❲defn❳❲trace_outputs❳(❲main_container❳){⎩572⎭❲print❳()⎩573⎭❲print❳(“___%20Message%20Traces%20___”)⎩574⎭❲print_routing_trace❳(❲main_container❳)⎩575⎭}⎩576⎭⎩577⎭❲defn❳❲dump_hierarchy❳(❲main_container❳){⎩578⎭❲print❳()⎩579⎭❲print❳(❲strcons❳(“___%20Hierarchy%20___”,(❲build_hierarchy❳(❲main_container❳))))⎩580⎭}⎩581⎭⎩582⎭❲defn❳❲build_hierarchy❳(❲c❳){⎩583⎭❲deftemp❳❲s❳⇐“”⎩584⎭❲for❳❲child❳❲in❳❲c❳.❲children❳{⎩585⎭❲s❳⇐❲strcons❳(❲s❳,❲build_hierarchy❳(❲child❳))}⎩586⎭❲deftemp❳❲indent❳⇐“”⎩587⎭❲for❳❲i❳❲in❳❲range❳(❲c❳.❲depth❳){⎩588⎭❲indent❳⇐❲indent❳+“%20%20”}⎩589⎭❲return❳❲strcons❳(“%5Cn”,❲strcons❳(❲indent❳,❲strcons❳(“(”,❲strcons❳(❲c❳.❲name❳,❲strcons❳(❲s❳,“)”)))))⎩590⎭}⎩591⎭⎩592⎭❲defn❳❲dump_connections❳(❲c❳){⎩593⎭❲print❳()⎩594⎭❲print❳(“___%20connections%20___”)⎩595⎭❲dump_possible_connections❳(❲c❳)⎩596⎭❲for❳❲child❳❲in❳❲c❳.❲children❳{⎩597⎭❲print❳()⎩598⎭❲dump_possible_connections❳(❲child❳)}⎩599⎭}⎩600⎭⎩601⎭❲defn❳❲trimws❳(❲s❳){⎩602⎭⌈%20remove%20whitespace%20from%20front%20and%20back%20of%20string⌉⎩603⎭❲return❳❲s❳.❲strip❳()⎩604⎭}⎩605⎭⎩606⎭❲defn❳❲clone_string❳(❲s❳){⎩607⎭❲return❳❲s❳⎩608⎭⎩609⎭}⎩610⎭❲defvar❳❲load_errors❳⇐⊥⎩611⎭❲defvar❳❲runtime_errors❳⇐⊥⎩612⎭⎩613⎭❲defn❳❲load_error❳(❲s❳){⎩614⎭❲global❳❲load_errors❳⎩615⎭❲print❳(❲s❳)⎩616⎭❲quit❳()⎩617⎭❲load_errors❳⇐⊤⎩618⎭}⎩619⎭⎩620⎭❲defn❳❲runtime_error❳(❲s❳){⎩621⎭❲global❳❲runtime_errors❳⎩622⎭❲print❳(❲s❳)⎩623⎭❲quit❳()⎩624⎭❲runtime_errors❳⇐⊤⎩625⎭}⎩626⎭⎩627⎭❲defn❳❲fakepipename_instantiate❳(❲reg❳,❲owner❳,❲name❳,❲template_data❳){⎩628⎭❲instance_name❳≡❲gensymbol❳(“fakepipe”)⎩629⎭❲return❳❲make_leaf❳(❲instance_name❳,❲owner❳,❲%CF%95❳,❲fakepipename_handler❳)⎩630⎭}⎩631⎭⎩632⎭❲defvar❳❲rand❳⇐0⎩633⎭⎩634⎭❲defn❳❲fakepipename_handler❳(❲eh❳,❲msg❳){⎩635⎭❲global❳❲rand❳⎩636⎭❲rand❳⇐❲rand❳+1⌈%20not%20very%20random%2C%20but%20good%20enough%20_%20%27rand%27%20must%20be%20unique%20within%20a%20single%20run⌉⎩637⎭❲send_string❳(❲eh❳,“”,❲strcons❳(“%2Ftmp%2Ffakepipe”,❲rand❳),❲msg❳)⎩638⎭}⎩639⎭⎩640⎭⎩641⎭⌈%20all%20of%20the%20the%20built_in%20leaves%20are%20listed%20here⌉⎩642⎭⌈%20future%3A%20refactor%20this%20such%20that%20programmers%20can%20pick%20and%20choose%20which%20(lumps%20of)%20builtins%20are%20used%20in%20a%20specific%20project⌉⎩643⎭⎩644⎭⎩645⎭❲defn❳❲initialize_stock_components❳(❲reg❳){⎩646⎭❲register_component❳(❲reg❳,❲Template❳(“1then2”,❲%CF%95❳,❲deracer_instantiate❳))⎩647⎭❲register_component❳(❲reg❳,❲Template❳(“%3F”,❲%CF%95❳,❲probe_instantiate❳))⎩648⎭❲register_component❳(❲reg❳,❲Template❳(“%3FA”,❲%CF%95❳,❲probeA_instantiate❳))⎩649⎭❲register_component❳(❲reg❳,❲Template❳(“%3FB”,❲%CF%95❳,❲probeB_instantiate❳))⎩650⎭❲register_component❳(❲reg❳,❲Template❳(“%3FC”,❲%CF%95❳,❲probeC_instantiate❳))⎩651⎭❲register_component❳(❲reg❳,❲Template❳(“trash”,❲%CF%95❳,❲trash_instantiate❳))⎩652⎭⎩653⎭❲register_component❳(❲reg❳,❲Template❳(“Low%20Level%20Read%20Text%20File”,❲%CF%95❳,❲low_level_read_text_file_instantiate❳))⎩654⎭❲register_component❳(❲reg❳,❲Template❳(“Ensure%20String%20Datum”,❲%CF%95❳,❲ensure_string_datum_instantiate❳))⎩655⎭⎩656⎭❲register_component❳(❲reg❳,❲Template❳(“syncfilewrite”,❲%CF%95❳,❲syncfilewrite_instantiate❳))⎩657⎭❲register_component❳(❲reg❳,❲Template❳(“stringconcat”,❲%CF%95❳,❲stringconcat_instantiate❳))⎩658⎭⌈%20for%20fakepipe⌉⎩659⎭❲register_component❳(❲reg❳,❲Template❳(“fakepipename”,❲%CF%95❳,❲fakepipename_instantiate❳))⎩660⎭}⎩661⎭⎩662⎭⎩663⎭❲defn❳❲initialize❳(){⎩664⎭❲root_of_project❳≡❲nthargv❳(1)⎩665⎭❲root_of_0D❳≡❲nthargv❳(2)⎩666⎭❲arg❳≡❲nthargv❳(3)⎩667⎭❲main_container_name❳≡❲nthargv❳(4)⎩668⎭❲diagram_names❳≡❲argvcdr❳(5)⎩669⎭❲palette❳≡❲initialize_component_palette❳(❲root_project❳,❲root_0D❳,❲diagram_names❳)⎩670⎭❲return❳[❲palette❳,[❲root_of_project❳,❲root_of_0D❳,❲main_container_name❳,❲diagram_names❳,❲arg❳]]⎩671⎭}⎩672⎭⎩673⎭❲defn❳❲start❳(❲palette❳,❲env❳,❲show_hierarchy❳∷❲False❳,❲show_connections❳∷❲False❳,❲show_traces❳∷❲False❳,❲show_all_outputs❳∷❲False❳){⎩674⎭❲root_of_project❳≡❲env❳[0]⎩675⎭❲root_of_0D❳≡❲env❳[1]⎩676⎭❲main_container_name❳≡❲env❳[2]⎩677⎭❲diagram_names❳≡❲env❳[3]⎩678⎭❲arg❳≡❲env❳[4]⎩679⎭❲set_environment❳(❲root_of_project❳,❲root_of_0D❳)⎩680⎭⌈%20get%20entrypoint%20container⌉⎩681⎭❲main_container❳⇐❲get_component_instance❳(❲palette❳,❲main_container_name❳,❲owner❳∷❲%CF%95❳)⎩682⎭❲if❳❲%CF%95❳=❲main_container❳{⎩683⎭❲load_error❳(❲strcons❳(“Couldn%27t%20find%20container%20with%20page%20name%20”,⎩684⎭❲strcons❳(❲main_container_name❳,⎩685⎭❲strcons❳(“%20in%20files%20”,⎩686⎭❲strcons❳(❲diagram_source_files❳,“(check%20tab%20names%2C%20or%20disable%20compression%3F)”)))))⎩687⎭}⎩688⎭❲if❳❲show_hierarchy❳{⎩689⎭❲dump_hierarchy❳(❲main_container❳)⎩690⎭}⎩691⎭❲if❳❲show_connections❳{⎩692⎭❲dump_connections❳(❲main_container❳)⎩693⎭}⎩694⎭❲if❳❲not❳❲load_errors❳{⎩695⎭❲arg❳⇐❲new_datum_string❳(❲arg❳)⎩696⎭❲msg❳⇐❲make_message❳(“”,❲arg❳)⎩697⎭❲inject❳(❲main_container❳,❲msg❳)⎩698⎭❲if❳❲show_all_outputs❳{⎩699⎭❲dump_outputs❳(❲main_container❳)⎩700⎭}❲else❳{⎩701⎭❲print_error_maybe❳(❲main_container❳)⎩702⎭❲print_specific_output❳(❲main_container❳,❲port❳∷“”,❲stderr❳∷❲False❳)⎩703⎭❲if❳❲show_traces❳{⎩704⎭❲print❳(“---%20routing%20traces%20---”)⎩705⎭❲print❳(❲routing_trace_all❳(❲main_container❳))⎩706⎭}⎩707⎭}⎩708⎭❲if❳❲show_all_outputs❳{⎩709⎭❲print❳(“---%20done%20---”)⎩710⎭}⎩711⎭}⎩712⎭}⎩713⎭⎩714⎭⎩715⎭⎩716⎭⌈%20utility%20functions%20⌉⎩717⎭❲defn❳❲send_int❳(❲eh❳,❲port❳,❲i❳,❲causing_message❳){⎩718⎭❲datum❳≡❲new_datum_int❳(❲i❳)⎩719⎭❲send❳(❲eh❳,❲port❳,❲datum❳,❲causing_message❳)⎩720⎭}⎩721⎭⎩722⎭❲defn❳❲send_bang❳(❲eh❳,❲port❳,❲causing_message❳){⎩723⎭❲datum❳≡❲new_datum_bang❳()⎩724⎭❲send❳(❲eh❳,❲port❳,❲datum❳,❲causing_message❳)⎩725⎭}⎩726⎭⎩727⎭