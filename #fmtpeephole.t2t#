fmtpeephole {

main = pattern+

pattern =
  | str -- str
  | any -- default

str =
  | applySyntactic<Interpolation> ("," str)?
  | applySyntactic<CharRun> ("," str)?
  
Interpolation =
  | "scons" "(" "interpolate" "(" ident ")" "," str ")" -- scons
  | "interpolate" "(" ident ")" -- single

CharRun =
  | "scons" "(" char "," CharRun ")" -- run
  | char -- single
  
char = sq (("\\'" | ~sq any))* sq

sq = "'"

string = dq schar* dq
dq = "\""
schar = ~dq any

ident = first rest*
first = letter | "_"
rest = alnum | "_"

}
